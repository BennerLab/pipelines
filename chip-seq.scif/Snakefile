configfile: "config.yaml"
workdir: "/scif/data"

# define samples
SAMPLES, = glob_wildcards("raw_data/{sample}.fastq.gz")

rule all:
	input:
		expand("raw_data/fastp/{sample}.fastp_fastqc.zip", sample=SAMPLES),
		expand("raw_data/fastp/{sample}.fastp_fastqc.html", sample=SAMPLES),
		expand("processed_data/bigwigs/{sample}.BPMnorm.bw", sample=SAMPLES),
		expand("processed_data/qc/{sample}/{sample}.stats.txt", sample=SAMPLES),
		expand("processed_data/{sample}.sorted.bam.bai", sample=SAMPLES),
		expand("processed_data/tag_directories/{sample}", sample=SAMPLES)

rule all_tagdirectories:
	input:
		expand("processed_data/{sample}.sorted.bam.bai", sample=SAMPLES),
		expand("processed_data/tag_directories/{sample}", sample=SAMPLES)

rule fastp:
	input:
		"raw_data/{sample}.fastq.gz"
	params:
		prefix="{sample}"
	log:
		"logs/fastp/{sample}.log"
	output:
		fastq="raw_data/fastp/{sample}.fastp.fastq.gz",
		html="raw_data/fastp_report/{sample}.html",
		json="raw_data/fastp_report/{sample}.json"
	threads: 3
	shell:
		"scif run fastp '-i $SCIF_DATA/{input} -o $SCIF_DATA/{output.fastq} -h $SCIF_DATA/{output.html} -R {params.prefix} -j $SCIF_DATA/{output.json} -w {threads} &> $SCIF_DATA/{log}'"

rule fastqc:
	input:
		"raw_data/fastp/{sample}.fastp.fastq.gz"
	output:
		"raw_data/fastp/{sample}.fastp_fastqc.zip",
		"raw_data/fastp/{sample}.fastp_fastqc.html"
	shell:
		"scif --quiet run fastqc $SCIF_DATA/{input}"

rule bowtie2_mapping:
	input:
		"raw_data/fastp/{sample}.fastp.fastq.gz"
	params:
		index="raw_data/Bowtie2Index/genome",
		prefix="{sample}"
	output:
		"processed_data/{sample}.sorted.bam"
	threads: 50
	shell:
		"scif run bowtie2 '-q --very-sensitive-local -N 1 -p {threads} -x {params.index} {input} | samtools sort -n -O bam -T {params.prefix} -@ {threads} - | samtools fixmate -m - - | samtools sort - -@ {threads} | samtools markdup - $SCIF_DATA/{output}'"

rule samtools_index:
	input:
		"processed_data/{sample}.sorted.bam"
	output:
		"processed_data/{sample}.sorted.bam.bai"
	shell:
		"scif --quiet run samtools 'index $SCIF_DATA/{input}'"

rule quality_metrics:
	input:
		"processed_data/{sample}.sorted.bam"
	params:
		prefix="{sample}",
		outprefix="processed_data/qc/{sample}",
		gt="raw_data/genome.chrom.sizes"
	output:
		"processed_data/qc/{sample}/{sample}.stats.txt"
	threads: 10
	shell:
		"scif --quiet run ssp '-i $SCIF_DATA/{input} -o {params.prefix} --gt {params.gt} -p {threads} --odir $SCIF_DATA/{params.outprefix}'"

rule create_bigwig:
	input:
		bam="processed_data/{sample}.sorted.bam",
		bam_index="processed_data/{sample}.sorted.bam.bai"
	output:
		"processed_data/bigwigs/{sample}.BPMnorm.bw"
	log:
		"logs/bamcoverage/{sample}.log"
	threads: 10
	shell:
		"scif run deeptools '-b $SCIF_DATA/{input.bam} -o $SCIF_DATA/{output} -bs 1 -p {threads} -e 150 --normalizeUsing BPM 2> $SCIF_DATA/{log}'"

rule create_tag_directories:
	input:
		"processed_data/{sample}.sorted.bam"
	output:
		"processed_data/tag_directories/{sample}"
	log:
		"logs/tagdirectories/{sample}.log"
	shell:
		"scif run homer '$SCIF_DATA/{output} $SCIF_DATA/{input} 2> $SCIF_DATA/{log}'"
